/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openkruise/kruise/pkg/apis/apps/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// StatefulSetRolloutLister helps list StatefulSetRollouts.
type StatefulSetRolloutLister interface {
	// List lists all StatefulSetRollouts in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.StatefulSetRollout, err error)
	// StatefulSetRollouts returns an object that can list and get StatefulSetRollouts.
	StatefulSetRollouts(namespace string) StatefulSetRolloutNamespaceLister
	StatefulSetRolloutListerExpansion
}

// statefulSetRolloutLister implements the StatefulSetRolloutLister interface.
type statefulSetRolloutLister struct {
	indexer cache.Indexer
}

// NewStatefulSetRolloutLister returns a new StatefulSetRolloutLister.
func NewStatefulSetRolloutLister(indexer cache.Indexer) StatefulSetRolloutLister {
	return &statefulSetRolloutLister{indexer: indexer}
}

// List lists all StatefulSetRollouts in the indexer.
func (s *statefulSetRolloutLister) List(selector labels.Selector) (ret []*v1alpha1.StatefulSetRollout, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StatefulSetRollout))
	})
	return ret, err
}

// StatefulSetRollouts returns an object that can list and get StatefulSetRollouts.
func (s *statefulSetRolloutLister) StatefulSetRollouts(namespace string) StatefulSetRolloutNamespaceLister {
	return statefulSetRolloutNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// StatefulSetRolloutNamespaceLister helps list and get StatefulSetRollouts.
type StatefulSetRolloutNamespaceLister interface {
	// List lists all StatefulSetRollouts in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.StatefulSetRollout, err error)
	// Get retrieves the StatefulSetRollout from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.StatefulSetRollout, error)
	StatefulSetRolloutNamespaceListerExpansion
}

// statefulSetRolloutNamespaceLister implements the StatefulSetRolloutNamespaceLister
// interface.
type statefulSetRolloutNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all StatefulSetRollouts in the indexer for a given namespace.
func (s statefulSetRolloutNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.StatefulSetRollout, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.StatefulSetRollout))
	})
	return ret, err
}

// Get retrieves the StatefulSetRollout from the indexer for a given namespace and name.
func (s statefulSetRolloutNamespaceLister) Get(name string) (*v1alpha1.StatefulSetRollout, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("statefulsetrollout"), name)
	}
	return obj.(*v1alpha1.StatefulSetRollout), nil
}
